<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAgEASABIAAD/2wBDAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/2wBDAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/wAARCABbAKUDAREAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD+/igAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoA
        KACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgDO1fWNJ8P6Zfa3r2qado
        mjaXbS3up6vq97babpmnWcCl5ru+v7yWG1tLaFAWlnuJY4o1BZ3A5rowmExePxNDBYDC4jG4zFVY0cNh
        MJQqYnE4itN2hSoUKMZ1a1Wb0jTpwlKT0SbMcRiKGEo1cTiq9HDYehCVStiMRUhRo0acVeVSrVqSjCnC
        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
        KACgAoAKACgAoAKACgD/2Q==
</value>
  </data>
</root>